---
layout: post
title: "关于本指南"
date: 2024-09-30 14:00:00 +0800
categories: jekyll update
permalink: /zh/Intellij/About-This-Guide
background: '/assets/images/banner.jpg'
language: "zh"
item: post
menu-url: /zh/Intellij
menu-title: IntelliJ平台插件SDK文档
last-url: /zh/Intellij/IntelliJ-Platform-Coding-Guidelines
last-title: IntelliJ 平台编码准则
---
# 关于本指南

本指南分为几个部分，类似于教科书。每个指南都基于上一节的内容，但无需按顺序阅读指南。关键主题页面旨在链接到能够理解架构并开始构建插件所需的页面。

所有源链接和参考列表都以 IntelliJ 平台 2024.2.3 为目标。

> 在浏览本指南时，您会注意到有些主题是灰色的。遗憾的是，该指南并不完整，并且包含特定主题的占位符。我们正在努力增加覆盖范围，但如果您因缺少的内容而卡住，请参阅获取帮助部分，了解有关如何继续学习的详细信息。    
> 该指南在 GitHub 上也是开源的，我们始终不遗余力地收到新内容、更正或更新的拉取请求。有关详细信息，请参阅 Contributing 页面。

> 另请参阅 词汇表 页面以获取常用术语的便捷参考。

## 插件

介绍如何创建可以扩展 IntelliJ 平台的插件。包括有关如何设置项目、注册扩展点、面向 IntelliJ 平台的特定版本以及如何打包、部署和测试插件的详细信息。

## 基础平台

描述体系结构的基础层，该层提供许多功能和实用程序，例如组件模型、用户界面、文档和编辑器、虚拟文件系统、设置、线程和后台任务。基础平台层主要包括 IntelliJ 平台的功能，该功能不针对语言功能或解析。

## 项目模型

记录 Project Model（项目模型），它表示当前加载的项目的文件和配置，以及用于生成项目的生成系统。

## PSI

程序结构接口 （PSI） 为许多不同的文件类型构建语法和语义模型。本节介绍如何使用 PSI、导航和操作语法树，并介绍强大的引用系统，该系统允许语法树节点引用语义模型中的项。它还详细介绍了 PSI 如何创建和使用索引。

## 功能

描述如何扩展使用 PSI 层的各种功能并与之交互，例如代码完成、导航、Alt+Enter、项、意图、重构等。另请参阅下面的自定义语言部分，了解仅在添加对新语言的支持时适用的语言特定功能。

## 测试

描述用于编写涵盖插件功能的自动化测试的可用基础结构。

## 自定义语言

插件经常扩展对现有语言的支持，例如向 Java 文件添加检查。本节介绍如何向 IntelliJ 平台添加对默认不支持的新语言的支持，创建解析器、语法和语义模型以及基于此构建的所有功能。

## 特定的产品功能

IntelliJ 平台中的许多功能与语言和产品无关。例如，代码检查在 Java 中的工作方式与在 Ruby 中相同；只是语法树和语义信息不同。本节介绍特定于产品的功能，例如特定的项目模型差异以及如何在插件中定位它们。

## 自定义 IDE

记录如何使用 IntelliJ 平台创建新的自定义 IDE，而不是现有产品（例如 WebStorm 或 Android Studio）的插件。

## 主题

介绍如何为基于 IntelliJ 平台的 IDE 创建主题。包括有关如何在 JetBrains Marketplace 上设置主题项目、自定义、构建和发布主题项目的详细信息。

## 资源

指向有用资源、词汇表、IntelliJ 平台扩展点和侦听器列表、有关如何探索 IntelliJ 平台 API 的提示和学习资源的链接。

## API 和兼容性

有关验证插件兼容性的信息和向后不兼容的 API 更改列表，以及 IntelliJ 平台每个主要版本中的显著更改和新功能。

## 工具

IntelliJ Platform Gradle Plugin （2.x） 等常用工具的参考和使用指南。

## UI 指南

如何创建一致且可用的用户界面。
